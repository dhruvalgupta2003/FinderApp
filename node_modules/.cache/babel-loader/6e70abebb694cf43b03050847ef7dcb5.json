{"ast":null,"code":"var _jsxFileName = \"H:\\\\react1\\\\smoothscroll\\\\src\\\\components\\\\Internship\\\\index.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useState } from 'react';\nimport { useTable } from 'react-table'; //import MOCK_DATA from './MOCK_DATA.json'\n\nimport i1 from './i1.json';\nimport { COLUMNS } from './column';\nimport './index.css';\nimport Navbar from '../Navbar';\nimport Footer from '../Footer';\nimport Sidebar from '../Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Table = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => i1, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n\n  const Home = () => {\n    _s();\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggle = () => {\n      setIsOpen(!isOpen);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        isOpen: isOpen,\n        toggle: toggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n            children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 28\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 43\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 27\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(Home, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n};\n\n_s2(Table, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["H:/react1/smoothscroll/src/components/Internship/index.js"],"names":["React","useMemo","useState","useTable","i1","COLUMNS","Navbar","Footer","Sidebar","Table","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","Home","isOpen","setIsOpen","toggle","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,OAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,OAAOC,EAAP,MAAe,WAAf;AACA,SAAQC,OAAR,QAAwB,UAAxB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAAA;;AAEvB,QAAMC,OAAO,GAAGT,OAAO,CAAC,MAAMI,OAAP,EAAe,EAAf,CAAvB;AACA,QAAMM,IAAI,GAAGV,OAAO,CAAC,MAAMG,EAAP,EAAW,EAAX,CAApB;AAGA,QAAMQ,aAAa,GAAGT,QAAQ,CAC1B;AACIO,IAAAA,OADJ;AAEIC,IAAAA;AAFJ,GAD0B,CAA9B;AAOA,QAAM;AACFE,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAOFL,aAPJ;;AASA,QAAMM,IAAI,GAAG,MAAM;AAAA;;AACf,UAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;;AAEL,UAAMmB,MAAM,GAAG,MAAM;AAChBD,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACL,KAFA;;AAIC,wBACI;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEA,MAAjB;AAAyB,QAAA,MAAM,EAAEE;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEF,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFE,eAIA,sBAAWR,aAAa,EAAxB;AAAA,gCAEI;AAAA,oBACKE,YAAY,CAACO,GAAb,CAAkBC,WAAD,iBACnB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,sBAEQD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC1B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,wBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,kBADE;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAiBI,sBAAWd,iBAAiB,EAA5B;AAAA,oBAEQE,IAAI,CAACM,GAAL,CAAUO,GAAD,IAAO;AACbZ,YAAAA,UAAU,CAACY,GAAD,CAAV;AACA,gCACG,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,wBAGQD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAD,IAAS;AACvB,oCAAQ,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,4BAA8BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,wBAAR;AACC,eAFD;AAHR;AAAA;AAAA;AAAA;AAAA,oBADH;AAUF,WAZD;AAFR;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAwCC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAxCD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA8CA,GArDA;;AAtBuB,KAsBjBV,IAtBiB;AA2EtB,CA3EE;;IAAMT,K;UAMaN,Q;;;KANbM,K;AA4EV,eAAeA,KAAf","sourcesContent":["import React,{ useMemo } from 'react'\r\nimport {useState} from 'react'\r\nimport { useTable } from 'react-table'\r\n//import MOCK_DATA from './MOCK_DATA.json'\r\nimport i1 from './i1.json'\r\nimport {COLUMNS  } from './column'\r\nimport './index.css'\r\nimport Navbar from '../Navbar'\r\nimport Footer from '../Footer'\r\nimport Sidebar from '../Sidebar';\r\n\r\n\r\nexport const Table = () => {\r\n       \r\n    const columns = useMemo(() => COLUMNS,[])\r\n    const data = useMemo(() => i1, [])\r\n    \r\n\r\n    const tableInstance = useTable(\r\n        {\r\n            columns,\r\n            data\r\n        }\r\n    )\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n\r\n    } = tableInstance\r\n \r\n    const Home = () => {\r\n        const [isOpen, setIsOpen] = useState(false)\r\n    \r\n   const toggle = () => {\r\n        setIsOpen(!isOpen);\r\n  }\r\n    \r\n    return(\r\n        <div>\r\n            <Sidebar isOpen={isOpen} toggle={toggle} />\r\n      <Navbar></Navbar>\r\n        \r\n        <table {...getTableProps()}>\r\n           \r\n            <thead>\r\n                {headerGroups.map((headerGroup)=>(\r\n               <tr {...headerGroup.getHeaderGroupProps()}>\r\n                   {\r\n                       headerGroup.headers.map(column=>(\r\n                           <th {...column.getHeaderProps()}>{column.render('Header')}\r\n                               </th>\r\n                       ))\r\n                   }\r\n                   \r\n               </tr>\r\n                     \r\n                ))}\r\n                \r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map((row)=>{\r\n                       prepareRow(row)\r\n                       return(\r\n                          <tr {...row.getRowProps()}>\r\n                              {\r\n                                 \r\n                                  row.cells.map((cell )=>{\r\n                                  return  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                  })}\r\n                          \r\n                          </tr>\r\n                       )\r\n                    }) }\r\n              \r\n            </tbody>\r\n   \r\n         </table>\r\n         <Footer/>\r\n         </div>\r\n      \r\n       )\r\n                  \r\n   }}\r\n   export default Table      "]},"metadata":{},"sourceType":"module"}